# https://zhuanlan.zhihu.com/p/534557680
# 工农红军最强大：“读了毛选之后，觉得议论文就得是通俗易懂，读了老人与海，觉得叙事文也可以用简单的词汇，所以我不太喜欢这些所谓的‘华丽辞藻’”
# 观梅听阮声：“一股子英语作文技巧的味道，实际上语言文字的积累不是靠换几个词就能一蹴而就的”

import re
import random
from beprint import Ansi

source = input(f'{Ansi.string("blue")}输入句子：')
a = {
    '尚且能够这样，更何况我们人呢？': ('物如此，事犹是，人亦然。',),
    '一白遮百丑': ('绘事后素',),
    '下定决心': ('矢志不移',),
    '丧失': ('夭折',),
    '营造更广阔的空间': ('搭建起更广阔的舞台', '厚植起更坚实的根基',),
    '也': ('亦',),
    '事物优点、缺点都有': ('瑕瑜互见',),
    '亡羊补牢，为时未晚': ('东隅已逝，桑榆非晚',),
    '停止': ('停滞',),
    '光阴似箭，日月如梭': ('流光一瞬，华表千年',),
    '制定目标': ('绘制蓝图',),
    '包含': ('包蕴',),
    '卷入': ('裹挟',),
    '发人深省': ('振聋发聩', '掷地有声',),
    '和解': ('涣然冰释',),
    '哗众取宠': ('博君一粲',),
    '唇齿相依': ('同声相应，同气相求',),
    '坏事积累起来就会造成严重的后果': ('积羽沉舟，群轻折轴',),
    '天边': ('天际',),
    '嫁祸于人': ('以邻为壑',),
    '实现(.*?)': ('吹响$1的号角', '扬起$1的风帆', '奏响$1的旋律', '迈进$1的殿堂', '点燃$1的火炬',),
    '寒门生贵子': ('夜光之珠，不必出于孟津之河； 盈握之璧，不必采于昆仑之山',),
    '就': ('即',),
    '广受好评': ('口碑载道',),
    '归根结底': ('静言思之',),
    '往事历历在目': ('瞻顾遗迹，如在昨日',),
    '心灰意冷': ('哀莫大于心死',),
    '恰巧': ('适逢其会',),
    '惋惜': ('唏嘘',),
    '把': ('将',),
    '抬头': ('昂首',),
    '挫折': ('冲波逆折',),
    '提出计划': ('绘制蓝图',),
    '政府机关': ('社会力量',),
    '政治清明': ('海晏河清',),
    '旁观': ('置身其外',),
    '未雨绸缪': ('曲突徙薪',),
    '校园': ('象牙塔',),
    '深入分析': ('解构',),
    '潮流': ('瞬息洪流',),
    '目标': ('蓝图',),
    '相互配合': ('交相辉映', '相映成趣',),
    '真相揭露': ('梦阑时，酒醒后',),
    '积少成多': ('冀以尘雾之微补益山海,荧烛末光增辉日月', '涓涓细流汇成大海，点点星光照亮银河',),
    '积淀': ('韬光养晦',),
    '稀少': ('寥若晨星',),
    '等': ('待',),
    '背着': ('背负',),
    '舆论作用极大': ('众口铄金，积毁销骨',),
    '舆论公众': ('社会力量',),
    '舍小家为大家': ('毁家纾难',),
    '艰苦奋斗': ('筚路蓝缕',),
    '获得(.*?)': ('吹响$1的号角', '扬起$1的风帆', '奏响$1的旋律', '迈进$1的殿堂', '点燃$1的火炬',),
    '落红不是无情物，化作春泥更护花': ('腐草为萤，耀采于月',),
    '虚假的美梦破碎': ('梦阑时，酒醒后',),
    '被(.*?)曝光': ('被置于$1的聚光灯下',),
    '要': ('应',),
    '观看': ('饱览',),
    '计划': ('蓝图',),
    '记录': ('镌刻',),
    '记载': ('镌刻',),
    '迷惑': ('不明就里', '如坠雾中',),
    '通俗艺术': ('山歌村笛',),
    '遮挡': ('掩饰',),
    '遵守': ('奉为圭臬',),
    '都': ('均',),
    '随即': ('旋即',),
    '高雅艺术': ('黄钟大吕',),
}
for k, v in a.items():
    for match in re.finditer(k, source):
        prefix = source[:match.span()[0]]
        suffix = source[match.span()[1]:]
        dest = random.choice(v)
        for i, group in enumerate(match.groups(), start=1):
            dest = dest.replace(f'${i}', group)
        print(f'{Ansi.string("black").light()}用“{Ansi.reset()}{Ansi.string("green")}{dest}{Ansi.reset()}{Ansi.string("black").light()}”替换“{Ansi.reset()}{Ansi.string("yellow")}{match.group()}{Ansi.reset()}{Ansi.string("black").light()}”{Ansi.reset()}')
        source = prefix + Ansi.reset().code + Ansi.string('cyan').light().code + dest + Ansi.reset().code + Ansi.string("blue").code + suffix
print(f'{Ansi.string("blue")}转换结果：' + source + Ansi.reset().code)

with open(__file__, 'r', encoding='utf-8') as f:
    exec(f.read())
